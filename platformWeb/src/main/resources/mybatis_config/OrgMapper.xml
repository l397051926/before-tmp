<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gennlife.platform.dao.OrgMapper" >
    <resultMap id="com.gennlife.platform.bean.OrgListBean" type="com.gennlife.platform.bean.OrgListBean" >
        <result column="orgID" property="orgID" jdbcType="VARCHAR" />
        <result column="orgName" property="orgName" jdbcType="VARCHAR" />
    </resultMap>
    <select id="getOrgList" resultMap="com.gennlife.platform.bean.OrgListBean" >
        select
        orgID,orgName
        from gennlife_org
        order by gennlife_org
    </select>
    <resultMap id="com.gennlife.platform.bean.OrgMemberBean" type="com.gennlife.platform.bean.OrgMemberBean" >
        <result column="o.orgID" property="orgID" jdbcType="VARCHAR" />
        <result column="orgName" property="orgName" jdbcType="VARCHAR" />
        <result column="u.uid" property="uid" jdbcType="VARCHAR" />
        <result column="u.uname" property="uname" jdbcType="VARCHAR" />
    </resultMap>
    <select id="getOneOrgList" resultMap="com.gennlife.platform.bean.OrgMemberBean" parameterType="String"  >
        select
        orgName,u.uid,u.uname,o.orgID
        from gennlife_org o join gennlife_user u on o.orgID = u.orgID
        where o.orgID =  #{orgID}
    </select>


    <resultMap id="com.gennlife.platform.model.Lab" type="com.gennlife.platform.model.Lab" >
        <result column="orgID" property="orgID" jdbcType="VARCHAR" />
        <result column="labID" property="labID" jdbcType="VARCHAR" />
        <result column="lab_name" property="lab_name" jdbcType="VARCHAR" />
        <result column="lab_leader" property="lab_leader" jdbcType="VARCHAR" />
        <result column="lab_leaderName" property="lab_leaderName" jdbcType="VARCHAR" />
        <result column="lab_parent" property="lab_parent" jdbcType="VARCHAR" />
        <result column="lab_level" property="lab_level" jdbcType="INTEGER"></result>
        <result column="add_user" property="add_user" jdbcType="VARCHAR"></result>
        <result column="add_time" property="add_time" jdbcType="VARCHAR"></result>
    </resultMap>
    <sql id="labProperty">
         orgID,labID,lab_name,lab_leader,lab_leaderName,lab_parent,lab_level,add_user,add_time,depart_name
    </sql>
    <select id="getLabs" resultMap="com.gennlife.platform.model.Lab" parameterType="String"  >
        select
        <include refid="labProperty" />
        from gennlife_lab
        where orgID = #{orgID}
        order by gennlife_lab.lab_name
    </select>
    <select id="getLabsByparentID" parameterType="String" resultMap="com.gennlife.platform.model.Lab">
        select
        <include refid="labProperty" />
        from gennlife_lab
        where orgID = #{orgID} AND lab_parent = #{lab_parent}
    </select>

    <resultMap id="com.gennlife.platform.model.Organization" type="com.gennlife.platform.model.Organization" >
        <result column="orgID" property="orgID" jdbcType="VARCHAR" />
        <result column="org_name" property="org_name" jdbcType="VARCHAR" />
        <result column="leader" property="leader" jdbcType="VARCHAR" />
        <result column="address" property="address" jdbcType="VARCHAR" />
    </resultMap>

    <select id="getOrganization" resultType="com.gennlife.platform.model.Organization" parameterType="String">
       SELECT
          orgID,org_name,leader,address
       FROM
          gennlife_org
       WHERE orgID = #{orgID}
    </select>
    <select id="getMaxlabLevel" resultType="Integer" parameterType="String">
       select
        max(lab_level)
        from gennlife_lab
        where orgID = #{orgID}
    </select>

    <select id="getLabLevel" resultType="Integer" parameterType="map">
        select
        lab_level
        from gennlife_lab
        where orgID = #{orgID,jdbcType=VARCHAR} AND labID = #{labID,jdbcType=VARCHAR}
    </select>
    <insert id="insertOneLab" parameterType="com.gennlife.platform.model.Lab">
        insert into gennlife_lab
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="orgID != null" >
                orgID,
            </if>
            <if test="labID != null" >
                labID,
            </if>
            <if test="lab_name != null" >
                lab_name,
            </if>
            <if test="lab_leader != null" >
                lab_leader,
            </if>
            <if test="lab_parent != null" >
                lab_parent,
            </if>
            <if test="lab_level != null" >
                lab_level,
            </if>
            <if test="add_user != null" >
                add_user,
            </if>
            <if test="add_time != null" >
                add_time,
            </if>

            <if test="depart_name != null" >
                depart_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="orgID != null" >
                #{orgID,jdbcType=VARCHAR},
            </if>
            <if test="labID != null" >
                #{labID,jdbcType=VARCHAR},
            </if>
            <if test="lab_name != null" >
                #{lab_name,jdbcType=VARCHAR},
            </if>
            <if test="lab_leader != null" >
                #{lab_leader,jdbcType=VARCHAR},
            </if>
            <if test="lab_parent != null" >
                #{lab_parent,jdbcType=VARCHAR},
            </if>
            <if test="lab_level != null" >
                #{lab_level,javaType=INTEGER},
            </if>
            <if test="add_user != null" >
                #{add_user,jdbcType=VARCHAR},
            </if>
            <if test="add_time != null" >
                #{add_time,jdbcType=VARCHAR},
            </if>
            <if test="depart_name != null" >
                #{depart_name,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="getLabsName" resultType="java.lang.String" parameterType="String">
        SELECT
          DISTINCT (lab_name)
        FROM
          gennlife_lab
        WHERE gennlife_lab.orgID = #{orgID}
    </select>

    <delete id="deleteLabs">
        DELETE FROM gennlife_lab WHERE
          gennlife_lab.labID in
          <foreach collection="labIDs" item="item" index="index" open="(" separator="," close=")">
              #{item,jdbcType=VARCHAR}
          </foreach>
    </delete>

    <select id="getLabBylabID" parameterType="String" resultMap="com.gennlife.platform.model.Lab">
        select
        <include refid="labProperty"></include>
        from gennlife_lab
        where labID = #{labID}
    </select>
    <update id="updateLabInfo" parameterType="map">
        UPDATE gennlife_lab
        <set>
            lab_name=#{lab_name,jdbcType=VARCHAR},
            lab_leader=#{lab_leader,jdbcType=VARCHAR},
            lab_leaderName=#{lab_leaderName,jdbcType=VARCHAR},
            lab_level = #{lab_level,jdbcType=INTEGER},
            lab_parent=#{lab_parent,jdbcType=VARCHAR},
            depart_name=#{depart_name,jdbcType=VARCHAR}
        </set>
        <where>gennlife_lab.labID = #{labID,jdbcType=VARCHAR}</where>
    </update>
    <update id="updateLabInfoByNameWithLab" parameterType="com.gennlife.platform.model.Lab">
        UPDATE gennlife_lab
        <set>
            <if test="lab_leader != null" >
                lab_leader=#{lab_leader,jdbcType=VARCHAR},
            </if>
            <if test="lab_leaderName != null" >
                lab_leaderName=#{lab_leaderName,jdbcType=VARCHAR},
            </if>
            <if test="depart_name != null" >
                depart_name=#{depart_name,jdbcType=VARCHAR},
            </if>
            lab_level = #{lab_level,jdbcType=INTEGER},
            lab_parent=#{lab_parent,jdbcType=VARCHAR}
        </set>
        <where>gennlife_lab.lab_name = #{lab_name,jdbcType=VARCHAR} AND orgID =#{orgID,jdbcType=VARCHAR}</where>
    </update>
    <update id="updateLabInfoByIdWithLab" parameterType="com.gennlife.platform.model.Lab">
        UPDATE gennlife_lab
        <set>
            <if test="lab_leader != null" >
                lab_leader=#{lab_leader,jdbcType=VARCHAR},
            </if>
            <if test="lab_leaderName != null" >
                lab_leaderName=#{lab_leaderName,jdbcType=VARCHAR},
            </if>
            <if test="depart_name != null" >
                depart_name=#{depart_name,jdbcType=VARCHAR},
            </if>
            lab_level = #{lab_level,jdbcType=INTEGER},
            lab_parent=#{lab_parent,jdbcType=VARCHAR}
        </set>
        <where>gennlife_lab.labID = #{labID,jdbcType=VARCHAR} AND orgID =#{orgID,jdbcType=VARCHAR}</where>
    </update>
    <select id="getLabBylabName" parameterType="String" resultMap="com.gennlife.platform.model.Lab">
        select
        <include refid="labProperty"></include>
        from gennlife_lab
        where lab_name = #{lab_name} AND orgID =#{orgID}
    </select>
    <select id="getProfessionList" parameterType="String" resultType="String">
         select
          distinct(uprofession)
         FROM
          gennlife_org_profession
        WHERE
          orgID = #{orgID}
        ORDER  BY ulevel ASC
    </select>

    <select id="getLabPInfo" resultMap="com.gennlife.platform.model.Lab">
        select
        <include refid="labProperty"></include>
        from gennlife_lab
        where labID =(SELECT
        lab_parent
        FROM
        gennlife_lab where labID=#{labID} and orgID=#{orgID}  limit 1)
    </select>

    <select id="getSubLabs" resultType="java.lang.String" parameterType="java.lang.String">
        select labID FROM gennlife_lab WHERE
        gennlife_lab.lab_parent =#{labID}
        and orgID=#{orgID}
    </select>
    <update id="updateSubLabPid">
        update gennlife_lab
        set lab_parent=#{pid}
        WHERE
        gennlife_lab.labID in
        <foreach collection="labIDs" item="item" index="index" open="(" separator="," close=")">
            #{item,jdbcType=VARCHAR}
        </foreach>
        and orgID=#{orgID}
    </update>
    <select id="getDepartNameByParentName" resultType="String" parameterType="map">
        select
        depart_name
        from gennlife_lab
        where lab_name = #{lab_name,jdbcType=VARCHAR}
    </select>

    <select id="getLabByOnelabName" parameterType="String" resultMap="com.gennlife.platform.model.Lab">
        select
        <include refid="labProperty"></include>
        from gennlife_lab
        where lab_name = #{lab_name}
    </select>

    <select id="getLabsBylabId" resultType="java.lang.String" parameterType="String">
        SELECT
        DISTINCT (lab_name)
        FROM
        gennlife_lab
        WHERE
        (lab_name LIKE CONCAT(CONCAT('%', #{skey}), '%'))
        AND
        gennlife_lab.orgID = #{orgID}
    </select>

    <select id="getMaxlabLevelBylabId" resultType="Integer" parameterType="String">
        select
        max(lab_level)
        from gennlife_lab
        where orgID = #{orgID} AND lab_name = #{skey}
    </select>


    <select id="getLabsByOrgID" resultType="com.gennlife.platform.model.Lab">
        SELECT
        <include refid="labProperty" />
        FROM gennlife_lab
        WHERE
        (lab_name LIKE CONCAT(CONCAT('%', #{skey}), '%') OR depart_name LIKE CONCAT(CONCAT('%', #{skey}), '%'))
        AND
        orgID = #{orgID}
        LIMIT #{offset},#{limit}
    </select>

    <select id="searchLabByOrgIDNoLimit" resultType="com.gennlife.platform.model.Lab">
        SELECT
        <include refid="labProperty" />
        FROM gennlife_lab
        WHERE
        (lab_name LIKE CONCAT(CONCAT('%', #{skey}), '%') OR depart_name LIKE CONCAT(CONCAT('%', #{skey}), '%'))
        AND
        orgID = #{orgID}
    </select>

    <select id="getLabsBypartId" resultType="com.gennlife.platform.model.Lab">
        SELECT
        <include refid="labProperty" />
        FROM gennlife_lab
        WHERE
        (lab_name LIKE CONCAT(CONCAT('%', #{skey}), '%') OR depart_name LIKE CONCAT(CONCAT('%', #{skey}), '%'))
        AND
        orgID = #{orgID}
        AND
        lab_parent in
    <foreach collection="labIDs" item="item" index="index" open="(" separator="," close=")">
        #{item,jdbcType=VARCHAR}
    </foreach>
        LIMIT #{offset},#{limit}
    </select>

    <select id="getLabsBypartIdNoLimit" resultType="com.gennlife.platform.model.Lab">
        SELECT
        <include refid="labProperty" />
        FROM gennlife_lab
        WHERE
        (lab_name LIKE CONCAT(CONCAT('%', #{skey}), '%') OR depart_name LIKE CONCAT(CONCAT('%', #{skey}), '%'))
        AND
        orgID = #{orgID}
        AND
        lab_parent in
        <foreach collection="labIDs" item="item" index="index" open="(" separator="," close=")">
            #{item,jdbcType=VARCHAR}
        </foreach>

    </select>

    <select id="getlabnameBylabID" resultType="String" >
        select
        lab_name
        from gennlife_lab
        where labID = #{labID,jdbcType=VARCHAR}
    </select>

    <update id="updatalableader">
        UPDATE gennlife_lab
        SET lab_leader=NULL ,lab_leaderName=NULL
        WHERE lab_leaderName in (SELECT uname FROM gennlife_user
        where
        uid in
        <foreach collection="uids" item="item" index="index" open="(" separator="," close=")">
            #{item,jdbcType=VARCHAR}
        </foreach>
        )
    </update>

    <select id="getLabIdByParentId" resultType="java.lang.String">
        select
        labID
        FROM
        gennlife_lab
        WHERE
        lab_parent = #{labId}
    </select>

    <select id="getLabIdByParentIds" resultType="java.lang.String">
        select
        labID
        FROM
        gennlife_lab
        WHERE
        lab_parent = #{labId}
        And (depart_name = '行政管理类' OR depart_name = '业务管理类')
    </select>

    <select id="seleteA" resultType="java.lang.String">
        select
        1
    </select>

    <select id="getLabIdAndParentId" resultMap="com.gennlife.platform.model.Lab" parameterType="String"  >
        select
        labID,lab_parent
        from gennlife_lab
    </select>

</mapper>